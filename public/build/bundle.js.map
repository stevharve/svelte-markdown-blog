{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte-spa-router/wrap.js","../../node_modules/svelte/store/index.mjs","../../node_modules/svelte-spa-router/Router.svelte","../../node_modules/regexparam/dist/index.mjs","../../node_modules/carbon-components-svelte/src/Link/Link.svelte","../../node_modules/carbon-components-svelte/src/icons/Close20.svelte","../../node_modules/carbon-components-svelte/src/Loading/Loading.svelte","../../node_modules/carbon-components-svelte/src/Grid/Grid.svelte","../../node_modules/carbon-components-svelte/src/Grid/Row.svelte","../../node_modules/carbon-components-svelte/src/Grid/Column.svelte","../../node_modules/carbon-components-svelte/src/Tile/ClickableTile.svelte","../../node_modules/carbon-components-svelte/src/icons/Menu20.svelte","../../node_modules/carbon-components-svelte/src/UIShell/navStore.js","../../node_modules/carbon-components-svelte/src/UIShell/SideNav/HamburgerMenu.svelte","../../node_modules/carbon-components-svelte/src/UIShell/GlobalHeader/Header.svelte","../../node_modules/carbon-components-svelte/src/UIShell/GlobalHeader/HeaderNav.svelte","../../node_modules/carbon-components-svelte/src/UIShell/GlobalHeader/HeaderNavItem.svelte","../../node_modules/carbon-components-svelte/src/UIShell/Content.svelte","../../node_modules/carbon-components-svelte/src/UIShell/SkipToContent.svelte","../../src/lib/Header.svelte","../../src/lib/article/ArticleCard.svelte","../../src/pages/index.svelte","../../src/pages/about.svelte","../../src/pages/notfound.svelte","../../src/App.svelte","../../src/main.js","../../src/pages/article.svelte"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true && boolean_attributes.has(name) ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.46.4' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","/**\n * @typedef {Object} WrappedComponent Object returned by the `wrap` method\n * @property {SvelteComponent} component - Component to load (this is always asynchronous)\n * @property {RoutePrecondition[]} [conditions] - Route pre-conditions to validate\n * @property {Object} [props] - Optional dictionary of static props\n * @property {Object} [userData] - Optional user data dictionary\n * @property {bool} _sveltesparouter - Internal flag; always set to true\n */\n\n/**\n * @callback AsyncSvelteComponent\n * @returns {Promise<SvelteComponent>} Returns a Promise that resolves with a Svelte component\n */\n\n/**\n * @callback RoutePrecondition\n * @param {RouteDetail} detail - Route detail object\n * @returns {boolean|Promise<boolean>} If the callback returns a false-y value, it's interpreted as the precondition failed, so it aborts loading the component (and won't process other pre-condition callbacks)\n */\n\n/**\n * @typedef {Object} WrapOptions Options object for the call to `wrap`\n * @property {SvelteComponent} [component] - Svelte component to load (this is incompatible with `asyncComponent`)\n * @property {AsyncSvelteComponent} [asyncComponent] - Function that returns a Promise that fulfills with a Svelte component (e.g. `{asyncComponent: () => import('Foo.svelte')}`)\n * @property {SvelteComponent} [loadingComponent] - Svelte component to be displayed while the async route is loading (as a placeholder); when unset or false-y, no component is shown while component\n * @property {object} [loadingParams] - Optional dictionary passed to the `loadingComponent` component as params (for an exported prop called `params`)\n * @property {object} [userData] - Optional object that will be passed to events such as `routeLoading`, `routeLoaded`, `conditionsFailed`\n * @property {object} [props] - Optional key-value dictionary of static props that will be passed to the component. The props are expanded with {...props}, so the key in the dictionary becomes the name of the prop.\n * @property {RoutePrecondition[]|RoutePrecondition} [conditions] - Route pre-conditions to add, which will be executed in order\n */\n\n/**\n * Wraps a component to enable multiple capabilities:\n * 1. Using dynamically-imported component, with (e.g. `{asyncComponent: () => import('Foo.svelte')}`), which also allows bundlers to do code-splitting.\n * 2. Adding route pre-conditions (e.g. `{conditions: [...]}`)\n * 3. Adding static props that are passed to the component\n * 4. Adding custom userData, which is passed to route events (e.g. route loaded events) or to route pre-conditions (e.g. `{userData: {foo: 'bar}}`)\n * \n * @param {WrapOptions} args - Arguments object\n * @returns {WrappedComponent} Wrapped component\n */\nexport function wrap(args) {\n    if (!args) {\n        throw Error('Parameter args is required')\n    }\n\n    // We need to have one and only one of component and asyncComponent\n    // This does a \"XNOR\"\n    if (!args.component == !args.asyncComponent) {\n        throw Error('One and only one of component and asyncComponent is required')\n    }\n\n    // If the component is not async, wrap it into a function returning a Promise\n    if (args.component) {\n        args.asyncComponent = () => Promise.resolve(args.component)\n    }\n\n    // Parameter asyncComponent and each item of conditions must be functions\n    if (typeof args.asyncComponent != 'function') {\n        throw Error('Parameter asyncComponent must be a function')\n    }\n    if (args.conditions) {\n        // Ensure it's an array\n        if (!Array.isArray(args.conditions)) {\n            args.conditions = [args.conditions]\n        }\n        for (let i = 0; i < args.conditions.length; i++) {\n            if (!args.conditions[i] || typeof args.conditions[i] != 'function') {\n                throw Error('Invalid parameter conditions[' + i + ']')\n            }\n        }\n    }\n\n    // Check if we have a placeholder component\n    if (args.loadingComponent) {\n        args.asyncComponent.loading = args.loadingComponent\n        args.asyncComponent.loadingParams = args.loadingParams || undefined\n    }\n\n    // Returns an object that contains all the functions to execute too\n    // The _sveltesparouter flag is to confirm the object was created by this router\n    const obj = {\n        component: args.asyncComponent,\n        userData: args.userData,\n        conditions: (args.conditions && args.conditions.length) ? args.conditions : undefined,\n        props: (args.props && Object.keys(args.props).length) ? args.props : {},\n        _sveltesparouter: true\n    }\n\n    return obj\n}\n\nexport default wrap\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","<script context=\"module\">\nimport {readable, writable, derived} from 'svelte/store'\nimport {tick} from 'svelte'\nimport {wrap as _wrap} from './wrap'\n\n/**\n * Wraps a component to add route pre-conditions.\n * @deprecated Use `wrap` from `svelte-spa-router/wrap` instead. This function will be removed in a later version.\n * \n * @param {SvelteComponent} component - Svelte component for the route\n * @param {object} [userData] - Optional object that will be passed to each `conditionsFailed` event\n * @param {...function(RouteDetail): boolean} conditions - Route pre-conditions to add, which will be executed in order\n * @returns {WrappedComponent} Wrapped component\n */\nexport function wrap(component, userData, ...conditions) {\n    // Use the new wrap method and show a deprecation warning\n    // eslint-disable-next-line no-console\n    console.warn('Method `wrap` from `svelte-spa-router` is deprecated and will be removed in a future version. Please use `svelte-spa-router/wrap` instead. See http://bit.ly/svelte-spa-router-upgrading')\n    return _wrap({\n        component,\n        userData,\n        conditions\n    })\n}\n\n/**\n * @typedef {Object} Location\n * @property {string} location - Location (page/view), for example `/book`\n * @property {string} [querystring] - Querystring from the hash, as a string not parsed\n */\n/**\n * Returns the current location from the hash.\n *\n * @returns {Location} Location object\n * @private\n */\nfunction getLocation() {\n    const hashPosition = window.location.href.indexOf('#/')\n    let location = (hashPosition > -1) ? window.location.href.substr(hashPosition + 1) : '/'\n\n    // Check if there's a querystring\n    const qsPosition = location.indexOf('?')\n    let querystring = ''\n    if (qsPosition > -1) {\n        querystring = location.substr(qsPosition + 1)\n        location = location.substr(0, qsPosition)\n    }\n\n    return {location, querystring}\n}\n\n/**\n * Readable store that returns the current full location (incl. querystring)\n */\nexport const loc = readable(\n    null,\n    // eslint-disable-next-line prefer-arrow-callback\n    function start(set) {\n        set(getLocation())\n\n        const update = () => {\n            set(getLocation())\n        }\n        window.addEventListener('hashchange', update, false)\n\n        return function stop() {\n            window.removeEventListener('hashchange', update, false)\n        }\n    }\n)\n\n/**\n * Readable store that returns the current location\n */\nexport const location = derived(\n    loc,\n    ($loc) => $loc.location\n)\n\n/**\n * Readable store that returns the current querystring\n */\nexport const querystring = derived(\n    loc,\n    ($loc) => $loc.querystring\n)\n\n/**\n * Store that returns the currently-matched params.\n * Despite this being writable, consumers should not change the value of the store.\n * It is exported as a readable store only (in the typings file)\n */\nexport const params = writable(undefined)\n\n/**\n * Navigates to a new page programmatically.\n *\n * @param {string} location - Path to navigate to (must start with `/` or '#/')\n * @return {Promise<void>} Promise that resolves after the page navigation has completed\n */\nexport async function push(location) {\n    if (!location || location.length < 1 || (location.charAt(0) != '/' && location.indexOf('#/') !== 0)) {\n        throw Error('Invalid parameter location')\n    }\n\n    // Execute this code when the current call stack is complete\n    await tick()\n\n    // Note: this will include scroll state in history even when restoreScrollState is false\n    history.replaceState({...history.state, __svelte_spa_router_scrollX: window.scrollX, __svelte_spa_router_scrollY: window.scrollY}, undefined, undefined)      \n    window.location.hash = (location.charAt(0) == '#' ? '' : '#') + location\n}\n\n/**\n * Navigates back in history (equivalent to pressing the browser's back button).\n * \n * @return {Promise<void>} Promise that resolves after the page navigation has completed\n */\nexport async function pop() {\n    // Execute this code when the current call stack is complete\n    await tick()\n\n    window.history.back()\n}\n\n/**\n * Replaces the current page but without modifying the history stack.\n *\n * @param {string} location - Path to navigate to (must start with `/` or '#/')\n * @return {Promise<void>} Promise that resolves after the page navigation has completed\n */\nexport async function replace(location) {\n    if (!location || location.length < 1 || (location.charAt(0) != '/' && location.indexOf('#/') !== 0)) {\n        throw Error('Invalid parameter location')\n    }\n\n    // Execute this code when the current call stack is complete\n    await tick()\n\n    const dest = (location.charAt(0) == '#' ? '' : '#') + location\n    try {\n        const newState = {\n            ...history.state\n        }\n        delete newState['__svelte_spa_router_scrollX']\n        delete newState['__svelte_spa_router_scrollY']\n        window.history.replaceState(newState, undefined, dest)\n    }\n    catch (e) {\n        // eslint-disable-next-line no-console\n        console.warn('Caught exception while replacing the current page. If you\\'re running this in the Svelte REPL, please note that the `replace` method might not work in this environment.')\n    }\n\n    // The method above doesn't trigger the hashchange event, so let's do that manually\n    window.dispatchEvent(new Event('hashchange'))\n}\n\n/**\n * Dictionary with options for the link action.\n * @typedef {Object} LinkActionOpts\n * @property {string} href - A string to use in place of the link's href attribute. Using this allows for updating link's targets reactively.\n * @property {boolean} disabled - If true, link is disabled\n */\n\n/**\n * Svelte Action that enables a link element (`<a>`) to use our history management.\n *\n * For example:\n *\n * ````html\n * <a href=\"/books\" use:link>View books</a>\n * ````\n *\n * @param {HTMLElement} node - The target node (automatically set by Svelte). Must be an anchor tag (`<a>`) with a href attribute starting in `/`\n * @param {string|LinkActionOpts} opts - Options object. For legacy reasons, we support a string too which will be the value for opts.href\n */\nexport function link(node, opts) {\n    opts = linkOpts(opts)\n\n    // Only apply to <a> tags\n    if (!node || !node.tagName || node.tagName.toLowerCase() != 'a') {\n        throw Error('Action \"link\" can only be used with <a> tags')\n    }\n\n    updateLink(node, opts)\n\n    return {\n        update(updated) {\n            updated = linkOpts(updated)\n            updateLink(node, updated)\n        }\n    }\n}\n\n// Internal function used by the link function\nfunction updateLink(node, opts) {\n    let href = opts.href || node.getAttribute('href')\n\n    // Destination must start with '/' or '#/'\n    if (href && href.charAt(0) == '/') {\n        // Add # to the href attribute\n        href = '#' + href\n    }\n    else if (!href || href.length < 2 || href.slice(0, 2) != '#/') {\n        throw Error('Invalid value for \"href\" attribute: ' + href)\n    }\n\n    node.setAttribute('href', href)\n    node.addEventListener('click', (event) => {\n        // Prevent default anchor onclick behaviour\n        event.preventDefault()\n        if (!opts.disabled) {\n            scrollstateHistoryHandler(event.currentTarget.getAttribute('href'))\n        }\n    })\n}\n\n// Internal function that ensures the argument of the link action is always an object\nfunction linkOpts(val) {\n    if (val && typeof val == 'string') {\n        return {\n            href: val\n        }\n    }\n    else {\n        return val || {}\n    }\n}\n\n/**\n * The handler attached to an anchor tag responsible for updating the\n * current history state with the current scroll state\n *\n * @param {string} href - Destination\n */\nfunction scrollstateHistoryHandler(href) {\n    // Setting the url (3rd arg) to href will break clicking for reasons, so don't try to do that\n    history.replaceState({...history.state, __svelte_spa_router_scrollX: window.scrollX, __svelte_spa_router_scrollY: window.scrollY}, undefined, undefined)\n    // This will force an update as desired, but this time our scroll state will be attached\n    window.location.hash = href\n}\n</script>\n\n{#if componentParams}\n    <svelte:component\n    this=\"{component}\"\n    params=\"{componentParams}\"\n    on:routeEvent\n    {...props}\n    />\n{:else}\n    <svelte:component\n    this=\"{component}\"\n    on:routeEvent\n    {...props}\n    />\n{/if}\n\n<script>\nimport {onDestroy, createEventDispatcher, afterUpdate} from 'svelte'\nimport {parse} from 'regexparam'\n\n/**\n * Dictionary of all routes, in the format `'/path': component`.\n *\n * For example:\n * ````js\n * import HomeRoute from './routes/HomeRoute.svelte'\n * import BooksRoute from './routes/BooksRoute.svelte'\n * import NotFoundRoute from './routes/NotFoundRoute.svelte'\n * routes = {\n *     '/': HomeRoute,\n *     '/books': BooksRoute,\n *     '*': NotFoundRoute\n * }\n * ````\n */\nexport let routes = {}\n\n/**\n * Optional prefix for the routes in this router. This is useful for example in the case of nested routers.\n */\nexport let prefix = ''\n\n/**\n * If set to true, the router will restore scroll positions on back navigation\n * and scroll to top on forward navigation.\n */\nexport let restoreScrollState = false\n\n/**\n * Container for a route: path, component\n */\nclass RouteItem {\n    /**\n     * Initializes the object and creates a regular expression from the path, using regexparam.\n     *\n     * @param {string} path - Path to the route (must start with '/' or '*')\n     * @param {SvelteComponent|WrappedComponent} component - Svelte component for the route, optionally wrapped\n     */\n    constructor(path, component) {\n        if (!component || (typeof component != 'function' && (typeof component != 'object' || component._sveltesparouter !== true))) {\n            throw Error('Invalid component object')\n        }\n\n        // Path must be a regular or expression, or a string starting with '/' or '*'\n        if (!path || \n            (typeof path == 'string' && (path.length < 1 || (path.charAt(0) != '/' && path.charAt(0) != '*'))) ||\n            (typeof path == 'object' && !(path instanceof RegExp))\n        ) {\n            throw Error('Invalid value for \"path\" argument - strings must start with / or *')\n        }\n\n        const {pattern, keys} = parse(path)\n\n        this.path = path\n\n        // Check if the component is wrapped and we have conditions\n        if (typeof component == 'object' && component._sveltesparouter === true) {\n            this.component = component.component\n            this.conditions = component.conditions || []\n            this.userData = component.userData\n            this.props = component.props || {}\n        }\n        else {\n            // Convert the component to a function that returns a Promise, to normalize it\n            this.component = () => Promise.resolve(component)\n            this.conditions = []\n            this.props = {}\n        }\n\n        this._pattern = pattern\n        this._keys = keys\n    }\n\n    /**\n     * Checks if `path` matches the current route.\n     * If there's a match, will return the list of parameters from the URL (if any).\n     * In case of no match, the method will return `null`.\n     *\n     * @param {string} path - Path to test\n     * @returns {null|Object.<string, string>} List of paramters from the URL if there's a match, or `null` otherwise.\n     */\n    match(path) {\n        // If there's a prefix, check if it matches the start of the path.\n        // If not, bail early, else remove it before we run the matching.\n        if (prefix) {\n            if (typeof prefix == 'string') {\n                if (path.startsWith(prefix)) {\n                    path = path.substr(prefix.length) || '/'\n                }\n                else {\n                    return null\n                }\n            }\n            else if (prefix instanceof RegExp) {\n                const match = path.match(prefix)\n                if (match && match[0]) {\n                    path = path.substr(match[0].length) || '/'\n                }\n                else {\n                    return null\n                }\n            }\n        }\n\n        // Check if the pattern matches\n        const matches = this._pattern.exec(path)\n        if (matches === null) {\n            return null\n        }\n\n        // If the input was a regular expression, this._keys would be false, so return matches as is\n        if (this._keys === false) {\n            return matches\n        }\n\n        const out = {}\n        let i = 0\n        while (i < this._keys.length) {\n            // In the match parameters, URL-decode all values\n            try {\n                out[this._keys[i]] = decodeURIComponent(matches[i + 1] || '') || null\n            }\n            catch (e) {\n                out[this._keys[i]] = null\n            }\n            i++\n        }\n        return out\n    }\n\n    /**\n     * Dictionary with route details passed to the pre-conditions functions, as well as the `routeLoading`, `routeLoaded` and `conditionsFailed` events\n     * @typedef {Object} RouteDetail\n     * @property {string|RegExp} route - Route matched as defined in the route definition (could be a string or a reguar expression object)\n     * @property {string} location - Location path\n     * @property {string} querystring - Querystring from the hash\n     * @property {object} [userData] - Custom data passed by the user\n     * @property {SvelteComponent} [component] - Svelte component (only in `routeLoaded` events)\n     * @property {string} [name] - Name of the Svelte component (only in `routeLoaded` events)\n     */\n\n    /**\n     * Executes all conditions (if any) to control whether the route can be shown. Conditions are executed in the order they are defined, and if a condition fails, the following ones aren't executed.\n     * \n     * @param {RouteDetail} detail - Route detail\n     * @returns {boolean} Returns true if all the conditions succeeded\n     */\n    async checkConditions(detail) {\n        for (let i = 0; i < this.conditions.length; i++) {\n            if (!(await this.conditions[i](detail))) {\n                return false\n            }\n        }\n\n        return true\n    }\n}\n\n// Set up all routes\nconst routesList = []\nif (routes instanceof Map) {\n    // If it's a map, iterate on it right away\n    routes.forEach((route, path) => {\n        routesList.push(new RouteItem(path, route))\n    })\n}\nelse {\n    // We have an object, so iterate on its own properties\n    Object.keys(routes).forEach((path) => {\n        routesList.push(new RouteItem(path, routes[path]))\n    })\n}\n\n// Props for the component to render\nlet component = null\nlet componentParams = null\nlet props = {}\n\n// Event dispatcher from Svelte\nconst dispatch = createEventDispatcher()\n\n// Just like dispatch, but executes on the next iteration of the event loop\nasync function dispatchNextTick(name, detail) {\n    // Execute this code when the current call stack is complete\n    await tick()\n    dispatch(name, detail)\n}\n\n// If this is set, then that means we have popped into this var the state of our last scroll position\nlet previousScrollState = null\n\n// Update history.scrollRestoration depending on restoreScrollState\n$: history.scrollRestoration = restoreScrollState ? 'manual' : 'auto'\nlet popStateChanged = null\nif (restoreScrollState) {\n    popStateChanged = (event) => {\n        // If this event was from our history.replaceState, event.state will contain\n        // our scroll history. Otherwise, event.state will be null (like on forward\n        // navigation)\n        if (event.state && event.state.__svelte_spa_router_scrollY) {\n            previousScrollState = event.state\n        }\n        else {\n            previousScrollState = null\n        }\n    }\n    // This is removed in the destroy() invocation below\n    window.addEventListener('popstate', popStateChanged)\n\n    afterUpdate(() => {\n        // If this exists, then this is a back navigation: restore the scroll position\n        if (previousScrollState) {\n            window.scrollTo(previousScrollState.__svelte_spa_router_scrollX, previousScrollState.__svelte_spa_router_scrollY)\n        }\n        else {\n            // Otherwise this is a forward navigation: scroll to top\n            window.scrollTo(0, 0)\n        }\n    })\n}\n\n// Always have the latest value of loc\nlet lastLoc = null\n\n// Current object of the component loaded\nlet componentObj = null\n\n// Handle hash change events\n// Listen to changes in the $loc store and update the page\n// Do not use the $: syntax because it gets triggered by too many things\nconst unsubscribeLoc = loc.subscribe(async (newLoc) => {\n    lastLoc = newLoc\n\n    // Find a route matching the location\n    let i = 0\n    while (i < routesList.length) {\n        const match = routesList[i].match(newLoc.location)\n        if (!match) {\n            i++\n            continue\n        }\n\n        const detail = {\n            route: routesList[i].path,\n            location: newLoc.location,\n            querystring: newLoc.querystring,\n            userData: routesList[i].userData,\n            params: (match && typeof match == 'object' && Object.keys(match).length) ? match : null\n        }\n\n        // Check if the route can be loaded - if all conditions succeed\n        if (!(await routesList[i].checkConditions(detail))) {\n            // Don't display anything\n            component = null\n            componentObj = null\n            // Trigger an event to notify the user, then exit\n            dispatchNextTick('conditionsFailed', detail)\n            return\n        }\n\n        // Trigger an event to alert that we're loading the route\n        // We need to clone the object on every event invocation so we don't risk the object to be modified in the next tick\n        dispatchNextTick('routeLoading', Object.assign({}, detail))\n\n        // If there's a component to show while we're loading the route, display it\n        const obj = routesList[i].component\n        // Do not replace the component if we're loading the same one as before, to avoid the route being unmounted and re-mounted\n        if (componentObj != obj) {\n            if (obj.loading) {\n                component = obj.loading\n                componentObj = obj\n                componentParams = obj.loadingParams\n                props = {}\n\n                // Trigger the routeLoaded event for the loading component\n                // Create a copy of detail so we don't modify the object for the dynamic route (and the dynamic route doesn't modify our object too)\n                dispatchNextTick('routeLoaded', Object.assign({}, detail, {\n                    component: component,\n                    name: component.name,\n                    params: componentParams\n                }))\n            }\n            else {\n                component = null\n                componentObj = null\n            }\n\n            // Invoke the Promise\n            const loaded = await obj()\n\n            // Now that we're here, after the promise resolved, check if we still want this component, as the user might have navigated to another page in the meanwhile\n            if (newLoc != lastLoc) {\n                // Don't update the component, just exit\n                return\n            }\n\n            // If there is a \"default\" property, which is used by async routes, then pick that\n            component = (loaded && loaded.default) || loaded\n            componentObj = obj\n        }\n\n        // Set componentParams only if we have a match, to avoid a warning similar to `<Component> was created with unknown prop 'params'`\n        // Of course, this assumes that developers always add a \"params\" prop when they are expecting parameters\n        if (match && typeof match == 'object' && Object.keys(match).length) {\n            componentParams = match\n        }\n        else {\n            componentParams = null\n        }\n\n        // Set static props, if any\n        props = routesList[i].props\n\n        // Dispatch the routeLoaded event then exit\n        // We need to clone the object on every event invocation so we don't risk the object to be modified in the next tick\n        dispatchNextTick('routeLoaded', Object.assign({}, detail, {\n            component: component,\n            name: component.name,\n            params: componentParams\n        })).then(() => {\n            params.set(componentParams)\n        })\n        return\n    }\n\n    // If we're still here, there was no match, so show the empty component\n    component = null\n    componentObj = null\n    params.set(undefined)\n})\n\nonDestroy(() => {\n    unsubscribeLoc()\n    popStateChanged && window.removeEventListener('popstate', popStateChanged)\n})\n</script>\n","export function parse(str, loose) {\n\tif (str instanceof RegExp) return { keys:false, pattern:str };\n\tvar c, o, tmp, ext, keys=[], pattern='', arr = str.split('/');\n\tarr[0] || arr.shift();\n\n\twhile (tmp = arr.shift()) {\n\t\tc = tmp[0];\n\t\tif (c === '*') {\n\t\t\tkeys.push('wild');\n\t\t\tpattern += '/(.*)';\n\t\t} else if (c === ':') {\n\t\t\to = tmp.indexOf('?', 1);\n\t\t\text = tmp.indexOf('.', 1);\n\t\t\tkeys.push( tmp.substring(1, !!~o ? o : !!~ext ? ext : tmp.length) );\n\t\t\tpattern += !!~o && !~ext ? '(?:/([^/]+?))?' : '/([^/]+?)';\n\t\t\tif (!!~ext) pattern += (!!~o ? '?' : '') + '\\\\' + tmp.substring(ext);\n\t\t} else {\n\t\t\tpattern += '/' + tmp;\n\t\t}\n\t}\n\n\treturn {\n\t\tkeys: keys,\n\t\tpattern: new RegExp('^' + pattern + (loose ? '(?=$|\\/)' : '\\/?$'), 'i')\n\t};\n}\n\nvar RGX = /*#__PURE__*/ /(\\/|^)([:*][^/]*?)(\\?)?(?=[/.]|$)/g;\n\n// error if key missing?\nexport function inject(route, values) {\n\treturn route.replace(RGX, (x, lead, key, optional) => {\n\t\tx = values[key=='*' ? 'wild' : key.substring(1)];\n\t\treturn x ? '/'+x : (optional || key=='*') ? '' : '/' + key;\n\t});\n}\n","<script>\n  /**\n   * Specify the size of the link\n   * @type {\"sm\" | \"lg\"}\n   */\n  export let size = undefined;\n\n  /**\n   * Specify the href value\n   * @type {string}\n   */\n  export let href = undefined;\n\n  /** Set to `true` to use the inline variant */\n  export let inline = false;\n\n  /**\n   * Specify the icon to render\n   * `inline` must be `false`\n   * @type {typeof import(\"svelte\").SvelteComponent}\n   */\n  export let icon = undefined;\n\n  /** Set to `true` to disable the checkbox */\n  export let disabled = false;\n\n  /** Set to `true` to allow visited styles */\n  export let visited = false;\n\n  /** Obtain a reference to the top-level HTML element */\n  export let ref = null;\n</script>\n\n<!-- svelte-ignore a11y-mouse-events-have-key-events -->\n{#if disabled}\n  <p\n    bind:this=\"{ref}\"\n    class:bx--link=\"{true}\"\n    class:bx--link--disabled=\"{disabled}\"\n    class:bx--link--inline=\"{inline}\"\n    class:bx--link--visited=\"{visited}\"\n    {...$$restProps}\n    on:click\n    on:mouseover\n    on:mouseenter\n    on:mouseleave\n  >\n    <slot />{#if !inline && icon}<div class:bx--link__icon=\"{true}\">\n        <svelte:component this=\"{icon}\" />\n      </div>{/if}\n  </p>\n{:else}\n  <a\n    bind:this=\"{ref}\"\n    class:bx--link=\"{true}\"\n    class:bx--link--disabled=\"{disabled}\"\n    class:bx--link--inline=\"{inline}\"\n    class:bx--link--visited=\"{visited}\"\n    class:bx--link--sm=\"{size === 'sm'}\"\n    class:bx--link--lg=\"{size === 'lg'}\"\n    rel=\"{$$restProps.target === '_blank' ? 'noopener noreferrer' : undefined}\"\n    href=\"{href}\"\n    {...$$restProps}\n    on:click\n    on:mouseover\n    on:mouseenter\n    on:mouseleave\n    ><slot />{#if !inline && icon}<div class:bx--link__icon=\"{true}\">\n        <svelte:component this=\"{icon}\" />\n      </div>{/if}</a\n  >\n{/if}\n","<script>\n  let className = undefined;\n  export { className as class };\n  export let id = undefined;\n  export let tabindex = undefined;\n  export let focusable = false;\n  export let title = undefined;\n  export let style = undefined;\n\n  $: ariaLabel = $$props[\"aria-label\"];\n  $: ariaLabelledBy = $$props[\"aria-labelledby\"];\n  $: labelled = ariaLabel || ariaLabelledBy || title;\n  $: attributes = {\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    \"aria-hidden\": labelled ? undefined : true,\n    role: labelled ? \"img\" : undefined,\n    focusable: tabindex === \"0\" ? true : focusable,\n    tabindex,\n  };\n</script>\n\n<!-- svelte-ignore a11y-mouse-events-have-key-events -->\n<svg\n  data-carbon-icon=\"Close20\"\n  on:click\n  on:mouseover\n  on:mouseenter\n  on:mouseleave\n  on:keyup\n  on:keydown\n  xmlns=\"http://www.w3.org/2000/svg\"\n  viewBox=\"0 0 32 32\"\n  fill=\"currentColor\"\n  width=\"20\"\n  height=\"20\"\n  class=\"{className}\"\n  preserveAspectRatio=\"xMidYMid meet\"\n  style=\"{style}\"\n  id=\"{id}\"\n  {...attributes}\n>\n  <path\n    d=\"M24 9.4L22.6 8 16 14.6 9.4 8 8 9.4 14.6 16 8 22.6 9.4 24 16 17.4 22.6 24 24 22.6 17.4 16 24 9.4z\"\n  ></path>\n  <slot>\n    {#if title}\n      <title>{title}</title>\n    {/if}\n  </slot>\n</svg>\n","<script>\n  /** Set to `true` to use the small variant */\n  export let small = false;\n\n  /** Set to `false` to disable the active state */\n  export let active = true;\n\n  /** Set to `false` to disable the overlay */\n  export let withOverlay = true;\n\n  /** Specify the label description */\n  export let description = \"Active loading indicator\";\n\n  /** Set an id for the label element */\n  export let id = \"ccs-\" + Math.random().toString(36);\n\n  $: spinnerRadius = small ? \"42\" : \"44\";\n</script>\n\n{#if withOverlay}\n  <div\n    class:bx--loading-overlay=\"{true}\"\n    class:bx--loading-overlay--stop=\"{!active}\"\n    {...$$restProps}\n  >\n    <div\n      aria-atomic=\"true\"\n      aria-labelledby=\"{id}\"\n      aria-live=\"{active ? 'assertive' : 'off'}\"\n      class:bx--loading=\"{true}\"\n      class:bx--loading--small=\"{small}\"\n      class:bx--loading--stop=\"{!active}\"\n    >\n      <!-- svelte-ignore a11y-label-has-associated-control -->\n      <label class:bx--visually-hidden=\"{true}\" id=\"{id}\">{description}</label>\n      <svg class:bx--loading__svg=\"{true}\" viewBox=\"0 0 100 100\">\n        <title>{description}</title>\n        {#if small}\n          <circle\n            class:bx--loading__background=\"{true}\"\n            cx=\"50%\"\n            cy=\"50%\"\n            r=\"{spinnerRadius}\"></circle>\n        {/if}\n        <circle\n          class:bx--loading__stroke=\"{true}\"\n          cx=\"50%\"\n          cy=\"50%\"\n          r=\"{spinnerRadius}\"></circle>\n      </svg>\n    </div>\n  </div>\n{:else}\n  <div\n    aria-atomic=\"true\"\n    aria-labelledby=\"{id}\"\n    aria-live=\"{active ? 'assertive' : 'off'}\"\n    class:bx--loading=\"{true}\"\n    class:bx--loading--small=\"{small}\"\n    class:bx--loading--stop=\"{!active}\"\n    {...$$restProps}\n  >\n    <!-- svelte-ignore a11y-label-has-associated-control -->\n    <label class:bx--visually-hidden=\"{true}\" id=\"{id}\">{description}</label>\n    <svg class:bx--loading__svg=\"{true}\" viewBox=\"0 0 100 100\">\n      <title>{description}</title>\n      {#if small}\n        <circle\n          class:bx--loading__background=\"{true}\"\n          cx=\"50%\"\n          cy=\"50%\"\n          r=\"{spinnerRadius}\"></circle>\n      {/if}\n      <circle\n        class:bx--loading__stroke=\"{true}\"\n        cx=\"50%\"\n        cy=\"50%\"\n        r=\"{spinnerRadius}\"></circle>\n    </svg>\n  </div>\n{/if}\n","<script>\n  /**\n   * @restProps {div}\n   * @slot {{ props: { class: string; [key: string]: any; } }}\n   */\n\n  /**\n   * Set to `true` to render a custom HTML element\n   * Props are destructured as `props` in the default slot (e.g., <Grid let:props><header {...props}>...</header></Grid>)\n   */\n  export let as = false;\n\n  /** Set to `true` to use the condensed variant */\n  export let condensed = false;\n\n  /** Set to `true` to use the narrow variant */\n  export let narrow = false;\n\n  /** Set to `true` to use the fullWidth variant */\n  export let fullWidth = false;\n\n  /** Set to `true` to remove the gutter */\n  export let noGutter = false;\n\n  /** Set to `true` to remove the left gutter */\n  export let noGutterLeft = false;\n\n  /** Set to `true` to remove the right gutter */\n  export let noGutterRight = false;\n\n  /** Set to `true` to add top and bottom padding to all columns */\n  export let padding = false;\n\n  $: props = {\n    ...$$restProps,\n    class: [\n      $$restProps.class,\n      \"bx--grid\",\n      condensed && \"bx--grid--condensed\",\n      narrow && \"bx--grid--narrow\",\n      fullWidth && \"bx--grid--full-width\",\n      noGutter && \"bx--no-gutter\",\n      noGutterLeft && \"bx--no-gutter--left\",\n      noGutterRight && \"bx--no-gutter--right\",\n      padding && \"bx--row-padding\",\n    ]\n      .filter(Boolean)\n      .join(\" \"),\n  };\n</script>\n\n{#if as}\n  <slot props=\"{props}\" />\n{:else}\n  <div {...props}>\n    <slot />\n  </div>\n{/if}\n","<script>\n  /**\n   * @restProps {div}\n   * @slot {{ props: { class: string; [key: string]: any; } }}\n   */\n\n  /**\n   * Set to `true` to render a custom HTML element\n   * Props are destructured as `props` in the default slot (e.g., <Row let:props><section {...props}>...</section></Row>)\n   */\n  export let as = false;\n\n  /** Set to `true` to use the condensed variant */\n  export let condensed = false;\n\n  /** Set to `true` to use the narrow variant */\n  export let narrow = false;\n\n  /** Set to `true` to remove the gutter */\n  export let noGutter = false;\n\n  /** Set to `true` to remove the left gutter */\n  export let noGutterLeft = false;\n\n  /** Set to `true` to remove the right gutter */\n  export let noGutterRight = false;\n\n  /** Set to `true` to add top and bottom padding to all columns */\n  export let padding = false;\n\n  $: props = {\n    ...$$restProps,\n    class: [\n      $$restProps.class,\n      \"bx--row\",\n      condensed && \"bx--row--condensed\",\n      narrow && \"bx--row--narrow\",\n      noGutter && \"bx--no-gutter\",\n      noGutterLeft && \"bx--no-gutter--left\",\n      noGutterRight && \"bx--no-gutter--right\",\n      padding && \"bx--row-padding\",\n    ]\n      .filter(Boolean)\n      .join(\" \"),\n  };\n</script>\n\n{#if as}\n  <slot props=\"{props}\" />\n{:else}\n  <div {...props}>\n    <slot />\n  </div>\n{/if}\n","<script>\n  /**\n   * @typedef {boolean | number} ColumnSize\n   * @typedef {{span?: ColumnSize; offset: number;}} ColumnSizeDescriptor\n   * @typedef {ColumnSize | ColumnSizeDescriptor} ColumnBreakpoint\n   * @restProps {div}\n   * @slot {{props: { class: string; [key: string]: any; }}}\n   */\n\n  /**\n   * @slot {{ props?: { class: string; } }}\n   */\n\n  /**\n   * Set to `true` to render a custom HTML element\n   * Props are destructured as `props` in the default slot (e.g., <Column let:props><article {...props}>...</article></Column>)\n   */\n  export let as = false;\n\n  /** Set to `true` to remove the gutter */\n  export let noGutter = false;\n\n  /** Set to `true` to remove the left gutter */\n  export let noGutterLeft = false;\n\n  /** Set to `true` to remove the right gutter */\n  export let noGutterRight = false;\n\n  /** Set to `true` to add top and bottom padding to the column */\n  export let padding = false;\n\n  /**\n   * Specify the aspect ratio of the column\n   * @type {\"2x1\" | \"16x9\" | \"9x16\" | \"1x2\" | \"4x3\" | \"3x4\" | \"1x1\"}\n   */\n  export let aspectRatio = undefined;\n\n  /**\n   * Set the small breakpoint\n   * @type {ColumnBreakpoint}\n   */\n  export let sm = undefined;\n\n  /**\n   * Set the medium breakpoint\n   * @type {ColumnBreakpoint}\n   */\n  export let md = undefined;\n\n  /**\n   * Set the large breakpoint\n   * @type {ColumnBreakpoint}\n   */\n  export let lg = undefined;\n\n  /**\n   * Set the extra large breakpoint\n   * @type {ColumnBreakpoint}\n   */\n  export let xlg = undefined;\n\n  /**\n   * Set the maximum breakpoint\n   * @type {ColumnBreakpoint}\n   */\n  export let max = undefined;\n\n  const breakpoints = [\"sm\", \"md\", \"lg\", \"xlg\", \"max\"];\n\n  $: columnClass = [sm, md, lg, xlg, max]\n    .map((breakpoint, i) => {\n      const name = breakpoints[i];\n\n      if (breakpoint === true) {\n        return `bx--col-${name}`;\n      } else if (typeof breakpoint === \"number\") {\n        return `bx--col-${name}-${breakpoint}`;\n      } else if (typeof breakpoint === \"object\") {\n        let bp = [];\n\n        if (typeof breakpoint.span === \"number\") {\n          bp = [...bp, `bx--col-${name}-${breakpoint.span}`];\n        } else if (breakpoint.span === true) {\n          bp = [...bp, `bx--col-${name}`];\n        }\n\n        if (typeof breakpoint.offset === \"number\") {\n          bp = [...bp, `bx--offset-${name}-${breakpoint.offset}`];\n        }\n\n        return bp.join(\" \");\n      }\n    })\n    .filter(Boolean)\n    .join(\" \");\n  $: props = {\n    ...$$restProps,\n    class: [\n      $$restProps.class,\n      columnClass,\n      !columnClass && \"bx--col\",\n      noGutter && \"bx--no-gutter\",\n      noGutterLeft && \"bx--no-gutter--left\",\n      noGutterRight && \"bx--no-gutter--right\",\n      aspectRatio && `bx--aspect-ratio bx--aspect-ratio--${aspectRatio}`,\n      padding && \"bx--col-padding\",\n    ]\n      .filter(Boolean)\n      .join(\" \"),\n  };\n</script>\n\n{#if as}\n  <slot props=\"{props}\" />\n{:else}\n  <div {...props}>\n    <slot />\n  </div>\n{/if}\n","<script>\n  /** @restProps {a | p} */\n\n  /** Set to `true` to click the tile */\n  export let clicked = false;\n\n  /** Set to `true` to enable the light variant */\n  export let light = false;\n\n  /** Set to `true` to disable the tile */\n  export let disabled = false;\n\n  /**\n   * Set the `href`\n   * @type {string}\n   */\n  export let href = undefined;\n\n  import Link from \"../Link/Link.svelte\";\n</script>\n\n<Link\n  {...$$restProps}\n  disabled=\"{disabled}\"\n  class=\"bx--tile bx--tile--clickable {clicked &&\n    'bx--tile--is-clicked'} {light && 'bx--tile--light'} {$$restProps.class}\"\n  href=\"{href}\"\n  on:click\n  on:click=\"{() => {\n    clicked = !clicked;\n  }}\"\n  on:keydown\n  on:keydown=\"{({ key }) => {\n    if (key === ' ' || key === 'Enter') {\n      clicked = !clicked;\n    }\n  }}\"\n  on:mouseover\n  on:mouseenter\n  on:mouseleave\n>\n  <slot />\n</Link>\n","<script>\n  let className = undefined;\n  export { className as class };\n  export let id = undefined;\n  export let tabindex = undefined;\n  export let focusable = false;\n  export let title = undefined;\n  export let style = undefined;\n\n  $: ariaLabel = $$props[\"aria-label\"];\n  $: ariaLabelledBy = $$props[\"aria-labelledby\"];\n  $: labelled = ariaLabel || ariaLabelledBy || title;\n  $: attributes = {\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    \"aria-hidden\": labelled ? undefined : true,\n    role: labelled ? \"img\" : undefined,\n    focusable: tabindex === \"0\" ? true : focusable,\n    tabindex,\n  };\n</script>\n\n<!-- svelte-ignore a11y-mouse-events-have-key-events -->\n<svg\n  data-carbon-icon=\"Menu20\"\n  on:click\n  on:mouseover\n  on:mouseenter\n  on:mouseleave\n  on:keyup\n  on:keydown\n  xmlns=\"http://www.w3.org/2000/svg\"\n  viewBox=\"0 0 20 20\"\n  fill=\"currentColor\"\n  width=\"20\"\n  height=\"20\"\n  class=\"{className}\"\n  preserveAspectRatio=\"xMidYMid meet\"\n  style=\"{style}\"\n  id=\"{id}\"\n  {...attributes}\n>\n  <path\n    d=\"M2 14.8H18V16H2zM2 11.2H18V12.399999999999999H2zM2 7.6H18V8.799999999999999H2zM2 4H18V5.2H2z\"\n  ></path>\n  <slot>\n    {#if title}\n      <title>{title}</title>\n    {/if}\n  </slot>\n</svg>\n","import { writable } from \"svelte/store\";\n\nexport const shouldRenderHamburgerMenu = writable(false);\n","<script>\n  /**\n   * Specify the ARIA label for the button\n   * @type {string}\n   */\n  export let ariaLabel = undefined;\n\n  /** Set to `true` to toggle the open state */\n  export let isOpen = false;\n\n  /**\n   * Specify the icon to render for the closed state\n   * Defaults to `Menu20`\n   * @type {typeof import(\"svelte\").SvelteComponent}\n   */\n  export let iconMenu = Menu20;\n\n  /**\n   * Specify the icon to render for the opened state\n   * Defaults to `Close20`\n   * @type {typeof import(\"svelte\").SvelteComponent}\n   */\n  export let iconClose = Close20;\n\n  /** Obtain a reference to the HTML button element */\n  export let ref = null;\n\n  import Close20 from \"../../icons/Close20.svelte\";\n  import Menu20 from \"../../icons/Menu20.svelte\";\n</script>\n\n<button\n  bind:this=\"{ref}\"\n  type=\"button\"\n  title=\"{ariaLabel}\"\n  aria-label=\"{ariaLabel}\"\n  class:bx--header__action=\"{true}\"\n  class:bx--header__menu-trigger=\"{true}\"\n  class:bx--header__menu-toggle=\"{true}\"\n  {...$$restProps}\n  on:click\n  on:click=\"{() => (isOpen = !isOpen)}\"\n>\n  <svelte:component this=\"{isOpen ? iconClose : iconMenu}\" />\n</button>\n","<script>\n  /** Set to `false` to hide the side nav by default */\n  export let expandedByDefault = true;\n\n  /** Set to `true` to open the side nav */\n  export let isSideNavOpen = false;\n\n  /**\n   * Specify the ARIA label for the header\n   * @type {string}\n   */\n  export let uiShellAriaLabel = undefined;\n\n  /**\n   * Specify the `href` attribute\n   * @type {string}\n   */\n  export let href = undefined;\n\n  /**\n   * Specify the company name\n   * @type {string}\n   */\n  export let company = undefined;\n\n  /**\n   * Specify the platform name\n   * Alternatively, use the named slot \"platform\" (e.g., <span slot=\"platform\">...</span>)\n   */\n  export let platformName = \"\";\n\n  /** Set to `true` to persist the hamburger menu */\n  export let persistentHamburgerMenu = false;\n\n  /**\n   * The window width (px) at which the SideNav is expanded and the hamburger menu is hidden\n   * 1056 represents the \"large\" breakpoint in pixels from the Carbon Design System:\n   * small: 320\n   * medium: 672\n   * large: 1056\n   * x-large: 1312\n   * max: 1584\n   */\n  export let expansionBreakpoint = 1056;\n\n  /** Obtain a reference to the HTML anchor element */\n  export let ref = null;\n\n  /**\n   * Specify the icon to render for the closed state\n   * Defaults to `Menu20`\n   * @type {typeof import(\"svelte\").SvelteComponent}\n   */\n  export let iconMenu = Menu20;\n\n  /**\n   * Specify the icon to render for the opened state\n   * Defaults to `Close20`\n   * @type {typeof import(\"svelte\").SvelteComponent}\n   */\n  export let iconClose = Close20;\n\n  import Close20 from \"../../icons/Close20.svelte\";\n  import Menu20 from \"../../icons/Menu20.svelte\";\n  import { shouldRenderHamburgerMenu } from \"../navStore\";\n  import HamburgerMenu from \"../SideNav/HamburgerMenu.svelte\";\n\n  let winWidth = undefined;\n\n  $: isSideNavOpen =\n    expandedByDefault &&\n    winWidth >= expansionBreakpoint &&\n    !persistentHamburgerMenu;\n  $: ariaLabel = company\n    ? `${company} `\n    : \"\" + (uiShellAriaLabel || $$props[\"aria-label\"] || platformName);\n</script>\n\n<svelte:window bind:innerWidth=\"{winWidth}\" />\n\n<header aria-label=\"{ariaLabel}\" class:bx--header=\"{true}\">\n  <slot name=\"skip-to-content\" />\n  {#if ($shouldRenderHamburgerMenu && winWidth < expansionBreakpoint) || persistentHamburgerMenu}\n    <HamburgerMenu\n      bind:isOpen=\"{isSideNavOpen}\"\n      iconClose=\"{iconClose}\"\n      iconMenu=\"{iconMenu}\"\n    />\n  {/if}\n  <a\n    href=\"{href}\"\n    class:bx--header__name=\"{true}\"\n    bind:this=\"{ref}\"\n    {...$$restProps}\n    on:click\n  >\n    {#if company}\n      <span class:bx--header__name--prefix=\"{true}\">{company}&nbsp;</span>\n    {/if}\n    <slot name=\"platform\">{platformName}</slot>\n  </a>\n  <slot />\n</header>\n","<script>\n  /**\n   * Specify the ARIA label for the nav\n   * @deprecated use \"aria-label\" instead\n   * @type {string}\n   */\n  export let ariaLabel = undefined;\n\n  $: props = {\n    \"aria-label\": ariaLabel || $$props[\"aria-label\"],\n    \"aria-labelledby\": $$props[\"aria-labelledby\"],\n  };\n</script>\n\n<nav {...props} class:bx--header__nav=\"{true}\" {...$$restProps}>\n  <ul {...props} role=\"menubar\" class:bx--header__menu-bar=\"{true}\">\n    <slot />\n  </ul>\n</nav>\n","<script>\n  /**\n   * Specify the `href` attribute\n   * @type {string}\n   */\n  export let href = undefined;\n\n  /**\n   * Specify the text\n   * @type {string}\n   */\n  export let text = undefined;\n\n  /** Set to `true` to select the item */\n  export let isSelected = false;\n\n  /** Obtain a reference to the HTML anchor element */\n  export let ref = null;\n\n  import { getContext, onMount } from \"svelte\";\n\n  const id = \"ccs-\" + Math.random().toString(36);\n  const ctx = getContext(\"HeaderNavMenu\");\n\n  let selectedItemIds = [];\n\n  const unsubSelectedItems = ctx?.selectedItems.subscribe((_selectedItems) => {\n    selectedItemIds = Object.keys(_selectedItems);\n  });\n\n  $: ctx?.updateSelectedItems({ id, isSelected });\n\n  onMount(() => {\n    return () => {\n      if (unsubSelectedItems) unsubSelectedItems();\n    };\n  });\n</script>\n\n<li role=\"none\">\n  <a\n    bind:this=\"{ref}\"\n    role=\"menuitem\"\n    tabindex=\"0\"\n    href=\"{href}\"\n    rel=\"{$$restProps.target === '_blank' ? 'noopener noreferrer' : undefined}\"\n    class:bx--header__menu-item=\"{true}\"\n    aria-current=\"{isSelected ? 'page' : undefined}\"\n    {...$$restProps}\n    on:click\n    on:mouseover\n    on:mouseenter\n    on:mouseleave\n    on:keyup\n    on:keydown\n    on:focus\n    on:blur\n    on:blur=\"{() => {\n      if (selectedItemIds.indexOf(id) === selectedItemIds.length - 1) {\n        ctx?.closeMenu();\n      }\n    }}\"\n  >\n    <span class:bx--text-truncate--end=\"{true}\">{text}</span>\n  </a>\n</li>\n","<script>\n  /** Specify the id for the main element */\n  export let id = \"main-content\";\n</script>\n\n<main id=\"{id}\" class:bx--content=\"{true}\" {...$$restProps}>\n  <slot />\n</main>\n","<script>\n  /** Specify the `href` attribute */\n  export let href = \"#main-content\";\n\n  /** Specify the tabindex */\n  export let tabindex = \"0\";\n</script>\n\n<a\n  href=\"{href}\"\n  tabindex=\"{tabindex}\"\n  class:bx--skip-to-content=\"{true}\"\n  {...$$restProps}\n  on:click\n>\n  <slot>Skip to main content</slot>\n</a>\n","<script>\r\n  import { location } from 'svelte-spa-router'\r\n\r\n  import {\r\n    Header,\r\n    HeaderNav,\r\n    HeaderNavItem,\r\n    HeaderNavMenu,\r\n    SideNav,\r\n    SideNavItems,\r\n    SideNavMenu,\r\n    SideNavMenuItem,\r\n    SideNavLink,\r\n    SideNavDivider,\r\n    SkipToContent,\r\n  } from \"carbon-components-svelte\"\r\n\r\n  // import Home32 from \"carbon-icons-svelte/lib/Home32\"\r\n  // import Information32 from \"carbon-icons-svelte/lib/Information32\"\r\n\r\n  let isSideNavOpen = false\r\n  \r\n  const onPath = (loc, path) => {\r\n  if(loc === path) {\r\n    return true\r\n  } else {\r\n    return false\r\n  }\r\n}\r\n</script>\r\n\r\n<Header href=\"#/\" company=\"Svelte\" platformName=\"Markdown Blog\" bind:isSideNavOpen>\r\n  <svelte:fragment slot=\"skip-to-content\">\r\n    <SkipToContent />\r\n  </svelte:fragment>\r\n  <HeaderNav>\r\n    <HeaderNavItem isSelected={onPath($location, '/')} href=\"#/\" text=\"Home\" />\r\n    <HeaderNavItem isSelected={onPath($location, '/about')} href=\"#/about\" text=\"About\" />\r\n  </HeaderNav>\r\n\r\n  <!-- <SideNav rail bind:isOpen={isSideNavOpen}>\r\n    <SideNavItems>\r\n      <SideNavLink isSelected={onPath($location, '/')} icon={Home32} href=\"#/\" text=\"Home\" />\r\n      <SideNavLink isSelected={onPath($location, '/about')} icon={Information32} href=\"#/about\" text=\"About\" />\r\n    </SideNavItems>\r\n  </SideNav> -->\r\n</Header>\r\n\r\n<style>\r\n\r\n</style>","<script>\r\n  import { ClickableTile, Grid, Row } from 'carbon-components-svelte'\r\n\r\n  export let title\r\n  export let description\r\n  export let href\r\n</script>\r\n\r\n<ClickableTile href={href}>\r\n  <Grid>\r\n    <Row>\r\n      <h3>{title}</h3>\r\n    </Row>\r\n    <Row>\r\n      <h5>{description}</h5>\r\n    </Row>\r\n  </Grid>\r\n</ClickableTile>","<script>\r\n  import {\r\n    Grid,\r\n    Row,\r\n    Column,\r\n    Loading\r\n    } from 'carbon-components-svelte'\r\n  \r\n  import ArticleCard from '../lib/article/ArticleCard.svelte'\r\n\r\n  /*\r\n    IMPORTANT FOR FUTURE:\r\n    Use a store to hold all of the articles so that the api\r\n    isn't called so frequently\r\n  */\r\n\r\n  const getArticles = async () => {\r\n\r\n    const res = await fetch('https://markdown-blog-api.herokuapp.com/articles')\r\n\r\n    if(res.ok) {\r\n      return res.json()\r\n    } else {\r\n      throw new Error(res.json())\r\n    }\r\n  }\r\n\r\n  let articles = getArticles()\r\n\r\n</script>\r\n\r\n<Grid>\r\n  <Row>\r\n    <Column>\r\n      <h1>Articles</h1>\r\n    </Column>\r\n  </Row>\r\n  <Row>\r\n    <Column>\r\n      {#await articles}\r\n        <Loading withOverlay={false} />\r\n      {:then data}\r\n        {#each data as article}\r\n          <ArticleCard title={article.title} description={article.description} href={`#/article/${article.slug}`} />\r\n        {/each}\r\n      {:catch error}\r\n        <h1>Error while loading data! {error}</h1>\r\n      {/await}\r\n    </Column>\r\n  </Row>\r\n</Grid>\r\n\r\n<style>\r\n  \r\n</style>","<script>\r\n  import { onMount } from 'svelte'\r\n\r\n  onMount(() => {\r\n    console.log('About mounted!')\r\n  })\r\n</script>\r\n\r\n<h1>About Page!</h1>\r\n\r\n<style>\r\n  main {\r\n\t\ttext-align: center;\r\n\t\tpadding: 1em;\r\n\t\tmax-width: 240px;\r\n\t\tmargin: 0 auto;\r\n\t}\r\n\r\n\th1 {\r\n\t\tcolor: #ff3e00;\r\n\t\ttext-transform: uppercase;\r\n\t\tfont-size: 4em;\r\n\t\tfont-weight: 100;\r\n\t}\r\n\r\n\t@media (min-width: 640px) {\r\n\t\tmain {\r\n\t\t\tmax-width: none;\r\n\t\t}\r\n\t}\r\n</style>","<script>\r\n  // Possibly include a back spa button instead of one that sends to home\r\n  import { location } from 'svelte-spa-router'\r\n  \r\n  import { Grid, Row, Column, ClickableTile } from 'carbon-components-svelte'\r\n</script>\r\n\r\n<Grid>\r\n  <Row>\r\n    <Column>\r\n      <h1>404</h1>\r\n      <h3>The path requested: {$location} was not found on this server.</h3>\r\n      <ClickableTile href=\"#/\">\r\n        Home\r\n      </ClickableTile>\r\n    </Column>\r\n    <Column />\r\n    <Column />\r\n  </Row>\r\n</Grid>\r\n","<script>\r\n  // CSS\r\n  import \"carbon-components-svelte/css/all.css\";\r\n\r\n  import Router from 'svelte-spa-router'\r\n  import wrap from 'svelte-spa-router/wrap'\r\n\r\n  import Layout from './lib/__layout.svelte'\r\n\r\n  import Index from './pages/index.svelte'\r\n  import About from './pages/about.svelte'\r\n  // import Article from './pages/article.svelte' Done dynamicly in router\r\n  import NotFound from \"./pages/notfound.svelte\";\r\n</script>\r\n\r\n<main>\r\n  <Layout>\r\n    <Router routes={{\r\n      '/': Index,\r\n      '/about': About,\r\n      '/article/:slug': wrap({\r\n        asyncComponent: () => import('./pages/article.svelte')\r\n      }),\r\n      '*': NotFound\r\n    }} />\r\n  </Layout>\r\n</main>\r\n\r\n<style>\r\n\t\r\n</style>","import App from './App.svelte';\r\n\r\nconst app = new App({\r\n\ttarget: document.body,\r\n\t// props: {\r\n\t// \tname: 'world'\r\n\t// }\r\n});\r\n\r\nexport default app;","<script>\r\n  import { Loading } from 'carbon-components-svelte'\r\n\r\n  export let params = {}\r\n\r\n  const getArticle = async () => {\r\n\r\n  const res = await fetch(`https://markdown-blog-api.herokuapp.com/articles/${params.slug}`)\r\n\r\n  if(res.ok) {\r\n    return res.json()\r\n  } else {\r\n    throw new Error(res.json())\r\n  }\r\n  }\r\n\r\n  let article = getArticle()\r\n\r\n  console.log(article)\r\n</script>\r\n\r\n{#await article}\r\n  <Loading />\r\n{:then data}\r\n  <h2>{data.title}</h2>\r\n  {@html data.sanitizedHtml}\r\n{:catch error}\r\n  <h1>Error while loading data! {error}</h1>\r\n{/await}"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","subscribe","store","callbacks","unsub","unsubscribe","component_subscribe","component","callback","$$","on_destroy","push","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","slice","get_slot_changes","dirty","lets","undefined","merged","len","Math","max","length","i","update_slot_base","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","p","get_all_dirty_from_scope","exclude_internal_props","props","result","compute_rest_props","keys","rest","Set","has","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","svg_element","createElementNS","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_attributes","attributes","descriptors","getOwnPropertyDescriptors","__proto__","key","style","cssText","set","set_svg_attributes","set_data","wholeText","toggle_class","toggle","classList","HtmlTag","constructor","this","e","n","c","html","h","m","nodeName","t","innerHTML","Array","from","childNodes","d","current_component","set_current_component","get_current_component","Error","onMount","on_mount","createEventDispatcher","type","detail","bubbles","createEvent","initCustomEvent","custom_event","call","bubble","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","schedule_update","then","flush","add_render_callback","add_flush_callback","seen_callbacks","flushidx","saved_component","update","pop","add","clear","fragment","before_update","after_update","outroing","outros","group_outros","r","check_outros","transition_in","block","local","delete","transition_out","o","handle_promise","promise","info","token","index","resolved","child_ctx","current","needs_flush","blocks","mount","error","catch","hasCatch","pending","update_await_block_branch","get_spread_update","levels","updates","to_null_out","accounted_for","get_spread_object","spread_props","bind","bound","create_component","mount_component","customElement","new_on_destroy","map","filter","destroy_component","detaching","init","instance","create_fragment","not_equal","append_styles","parent_component","on_disconnect","context","Map","skip_bound","root","ready","ret","fill","make_dirty","hydrate","nodes","children","l","intro","SvelteComponent","$destroy","$on","indexOf","splice","$set","$$props","obj","$$set","wrap","args","asyncComponent","conditions","isArray","loadingComponent","loading","loadingParams","userData","_sveltesparouter","subscriber_queue","readable","start","writable","stop","subscribers","new_value","run_queue","subscriber","invalidate","size","derived","stores","initial_value","single","stores_array","auto","inited","values","cleanup","sync","unsubscribers","switch_instance_spread_levels","params","getLocation","hashPosition","window","location","href","substr","qsPosition","querystring","loc","$loc","routes","prefix","restoreScrollState","RouteItem","path","charAt","RegExp","pattern","str","loose","tmp","ext","arr","split","shift","substring","parse","_pattern","_keys","match","startsWith","matches","exec","out","decodeURIComponent","async","routesList","route","componentParams","dispatch","dispatchNextTick","previousScrollState","popStateChanged","state","__svelte_spa_router_scrollY","scrollTo","__svelte_spa_router_scrollX","lastLoc","componentObj","unsubscribeLoc","newLoc","checkConditions","$$invalidate","loaded","default","onDestroy","history","scrollRestoration","if_block","create_if_block_2","rel","a_rel_value","create_if_block_1","div","inline","icon","disabled","visited","ref","$$value","title_1","create_if_block","svg","class","className","id","tabindex","focusable","title","ariaLabel","ariaLabelledBy","labelled","role","label","circle","div_aria_live_value","div1","div0","small","active","withOverlay","description","random","toString","spinnerRadius","as","condensed","narrow","fullWidth","noGutter","noGutterLeft","noGutterRight","padding","$$restProps","Boolean","join","aspectRatio","sm","md","lg","xlg","breakpoints","columnClass","breakpoint","bp","span","offset","clicked","light","shouldRenderHamburgerMenu","button","isOpen","iconMenu","Menu20","iconClose","Close20","if_block0","a_levels","header","winWidth","expandedByDefault","isSideNavOpen","uiShellAriaLabel","company","platformName","persistentHamburgerMenu","expansionBreakpoint","nav_levels","nav","ul","li","a_aria_current_value","isSelected","get","selectedItemIds","unsubSelectedItems","selectedItems","_selectedItems","updateSelectedItems","closeMenu","main_levels","main","h3","h5","h1","each_blocks","iterations","slug","res","fetch","ok","json","getArticles","console","log","Index","About","func","NotFound","app","body","t0_value","raw_value","sanitizedHtml","h2","article","getArticle"],"mappings":"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"}